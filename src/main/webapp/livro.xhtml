<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"
	xmlns:ui="http://xmlns.jcp.org/jsf/facelets"
	xmlns:f="http://xmlns.jcp.org/jsf/core"
	xmlns:h="http://xmlns.jcp.org/jsf/html"
	xmlns:p="http://primefaces.org/ui">

<!--  compondo esse conteudo no layout definido no template -->
<ui:composition template="_template.xhtml">
	<ui:define name="titulo">Cadastro Livro</ui:define>
	<ui:define name="conteudo">
		<f:metadata>
			<f:viewParam name="livroId" value="#{livroBean.livroId}" />
			<f:viewAction action="#{livroBean.carregaAutorPorId()}"
				if="#{param.livroId != null }" />
		</f:metadata>

		<h:panelGrid columns="1">
			<h:form id="form-livro">
				<p:messages id="message-validation" />
				<p:fieldset legend="Dados do livro">
					<h:panelGrid columns="2">

						<p:outputLabel value="Titulo" for="titulo" />
						<p:inputText value="#{livroBean.livro.titulo}" id="titulo"
							required="true" requiredMessage="Titulo obrigatorio"
							validatorMessage="Titulo não pode ser superior a 40 caracteres">
							<!-- Definindo a quantidade maxima de caracteres com um validador jsf,
					 para mudar a mensagem, devemos usar outra atributo, validator message -->
							<!-- validatorMessage ~> mensagem para validar mensagem
					 	  requiredMessage  ~> Mensagem para validar um validate do jsf -->
							<f:validateLength maximum="40" />
							<f:ajax event="blur" render="message-validation" />
							<!-- f:ajax dentro de um input, diz que esse dado vai ser envido via ajax
					 Aqui podemos usar o atributo event para indicar quando vamos enviar esse
					 dado -->
						</p:inputText>

						<p:outputLabel value="Isbn:" for="isbn" />
						<p:inputMask value="#{livroBean.livro.isbn}" id="isbn"
							validator="#{livroBean.comecaComDigitoUm}" required="true"
							mask="999-9-99-999999-9">
							<f:ajax render="message-validation" event="keyup" />
						</p:inputMask>

						<p:outputLabel value="Preco:" for="preco" />
						<p:inputNumber value="#{livroBean.livro.preco}" id="preco"
							symbol="R$ " decimalPlaces="2" decimalSeparator=","
							required="true" />

						<p:outputLabel value="Data de Lançamento:" for="dataLancamento" />
						<p:calendar id="dataLancamento" required="true"
							value="#{livroBean.livro.dataLancamento.time}"
							pattern="dd/MM/yyyy" mask="true" />
					</h:panelGrid>
				</p:fieldset>

				<!--  na action, usamos o nome da página que queremos acessar -->
				<!--  o atributo immediate fará com que o método formAutor() seja executado 
		durante a segunda fase APPLY_REQUEST_VALUES, antes da validação -->

				<p:fieldset legend="Dados do Autor">

					<p:panelGrid columns="4">
						<p:outputLabel value="Selecione Autor" for="autor" />

						<!-- Pega o itemValue selecionado e popula no nosso ManagedBean -->
						<p:selectOneMenu id="autor" value="#{livroBean.autorId}">
							<!-- 
				value ~> lista de autores
				var ~> indica um autor dentro da iteração pela lista de autores
				itemLabel ~> o que vamos mostrar do autor
				itemValue ~> associar um valor ao item
			 	-->
							<f:selectItems value="#{livroBean.autores}" var="autor"
								itemLabel="#{autor.nome}" itemValue="#{autor.id}" />
						</p:selectOneMenu>


						<!-- Método para associar autor ao livro -->
						<p:commandButton action="#{livroBean.gravarAutor}"
							value="Gravar Autor" process="@this autor"
							update="tabela-autores" />

						<p:commandLink action="#{livroBean.formAutor}"
							value="ou cadastre um autor" immediate="true" />

					</p:panelGrid>

					<!-- Mesmo padrão do selectItems -->
					<p:dataTable value="#{livroBean.autoresDoLivro}" var="autor"
						id="tabela-autores" style="width:50%" emptyMessage="Nenhum autor">
						<p:column>
							<h:outputText value="#{autor.nome}" />
						</p:column>
						<p:column>
							<p:commandLink action="#{livroBean.removeAutorDoLivro(autor)}"
								value="remove" update="@form" process="@this" />
						</p:column>
					</p:dataTable>
				</p:fieldset>

				<p:commandButton action="#{livroBean.gravar}" value="Registrar"
					process="@form" update=":formTabelaDeLivros:tabelaDeLivros @form" />
			</h:form>
		</h:panelGrid>

		<h:form id="formTabelaDeLivros">
			<p:dataTable id="tabelaDeLivros" value="#{livroBean.model}"
				style="width:80%" var="livro" rows="5" paginator="true" lazy="true">

				<f:facet name="header">Livros</f:facet>

				<p:column headerText="Titulo" sortBy="#{livro.titulo}"
					filterBy="#{livro.titulo}" filterMatchMode="startsWith">
					<!-- setando o cabeçalho das colunas -->
					<h:outputText value="#{livro.titulo}" />
				</p:column>
				<p:column sortBy="#{livro.isbn}">
					<f:facet name="header">Isbn</f:facet>
					<h:outputText value="#{livro.isbn}" />
				</p:column>
				<p:column filterBy="#{livro.preco}"
					filterFunction="#{livroBean.precoMenor}">
					<f:facet name="header">Preço</f:facet>
					<h:outputText value="#{livro.preco}">
						<f:convertNumber type="currency" pattern="R$ #0.00"
							currencySymbol="R$" locale="pt_BR" />
					</h:outputText>
				</p:column>
				<p:column>
					<f:facet name="header">Data de lançamento</f:facet>
					<h:outputText value="#{livro.dataLancamento.time}">
						<f:convertDateTime pattern="dd/MM/yyyy" />
					</h:outputText>
				</p:column>
				<p:column>
					<f:facet name="header">Alteração</f:facet>
					<p:commandLink action="#{livroBean.alterarLivro(livro)}"
						update=":form-livro" value="alterar" />
				</p:column>
				<p:column>
					<f:facet name="header">Remover</f:facet>
					<p:commandLink action="#{livroBean.removerLivro(livro)}"
						update="@form" value="remover" />
				</p:column>
			</p:dataTable>
		</h:form>
	</ui:define>
	<ui:define name="conteudo-rodape">
		gege oficial real
	</ui:define>
</ui:composition>
</html>
